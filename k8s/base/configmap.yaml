apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: ai-textbook
data:
  NODE_ENV: "production"
  NEXT_PUBLIC_API_URL: "http://backend-service:4000"
  API_PORT: "4000"
  DATABASE_POOL_SIZE: "20"
  REDIS_MAX_RETRIES: "3"
  LOG_LEVEL: "info"
  CORS_ORIGIN: "http://frontend-service:3000"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ai-textbook
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    
    http {
      upstream frontend {
        server frontend-service:3000;
      }
      
      upstream backend {
        server backend-service:4000;
      }
      
      server {
        listen 80;
        server_name _;
        
        location / {
          proxy_pass http://frontend;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
        
        location /api {
          proxy_pass http://backend;
          proxy_http_version 1.1;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
        }
        
        location /health {
          access_log off;
          return 200 "healthy\n";
        }
      }
    }