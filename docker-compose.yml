version: '3.8'

services:
  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    container_name: ai-textbook-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:80/api
      - BACKEND_INTERNAL_URL=http://backend:4000
    depends_on:
      - backend
      - postgres
      - redis
    networks:
      - ai-textbook-network
    restart: unless-stopped

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ai-textbook-backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD:-digitalbook2024}@postgres:5432/digitalbook
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-1ba73cfb4fd487c489b46e6ab2fd46cfe9689ebd7169ffd1ba4e1fbbb469d1f49b9007c581ba0cfc00287d918aa004465096a65d3d7e740084ba2f840859978e}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-a8f2b76dd6d3e0692362688d6cb697301602ba70538e72fe82018c6fb4d09c7c82c44800026df9e4bcba742cea3e1e8ef44a5b93481c4359edf833daf0cae1b8}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SESSION_SECRET=${SESSION_SECRET:-e5b9a2f59a140980aa89a4e74a09e2d94a43592870354896099593f7e062439f}
      - MAX_FILE_SIZE=104857600
      - PDF_PROCESSING_TIMEOUT=60000
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/temp:/app/temp
      - backend_node_modules:/app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - ai-textbook-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database with pgvector
  postgres:
    image: pgvector/pgvector:pg15
    container_name: ai-textbook-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-digitalbook2024}
      - POSTGRES_DB=digitalbook
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql
    networks:
      - ai-textbook-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-textbook-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-textbook-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ai-textbook-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-dev.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - ai-textbook-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_node_modules:

networks:
  ai-textbook-network:
    driver: bridge