version: '3.8'

services:
  postgres-test:
    image: postgres:15
    environment:
      POSTGRES_DB: ai_textbook_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:password@postgres-test:5432/ai_textbook_test
      REDIS_URL: redis://redis-test:6379
      JWT_SECRET: test-jwt-secret
      OPENAI_API_KEY: ${OPENAI_API_KEY:-test-key}
      CORS_ORIGIN: http://frontend-test:3000
    ports:
      - "4001:4000"
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    command: >
      sh -c "
        npm run migrate &&
        npm run seed &&
        npm start
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend-test:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: test
      NEXT_PUBLIC_API_URL: http://backend-test:4000
    ports:
      - "3001:3000"
    depends_on:
      backend-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  playwright:
    build:
      context: .
      dockerfile: Dockerfile.playwright
    environment:
      BASE_URL: http://frontend-test:3000
      CI: true
    depends_on:
      frontend-test:
        condition: service_healthy
    volumes:
      - ./tests:/app/tests
      - ./playwright-report:/app/playwright-report
      - ./test-results:/app/test-results
    command: >
      sh -c "
        npx playwright install --with-deps &&
        npm run test:e2e
      "

volumes:
  postgres_test_data: