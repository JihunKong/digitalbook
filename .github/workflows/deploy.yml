name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  AWS_REGION: 'ap-northeast-2'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Run linting
        run: |
          npm run lint || true
          cd backend && npm run lint || true

      - name: Run tests
        run: |
          npm test -- --passWithNoTests
          cd backend && npm test -- --passWithNoTests

      - name: Build application
        run: npm run build

  deploy:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --production
          cd backend && npm ci --production

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: https://xn--220bu63c.com/api
          NEXT_PUBLIC_DOMAIN: xn--220bu63c.com

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload static assets to S3
        run: |
          aws s3 sync .next/static s3://digitalbook-assets/static/ \
            --cache-control "public, max-age=31536000" \
            --delete

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/digitalbook
            git pull origin main
            npm ci --production
            cd backend && npm ci --production
            cd ..
            npm run build
            sudo systemctl restart digitalbook
            pm2 restart backend
            
            # Health check
            sleep 10
            curl -f http://localhost:3000/api/health || exit 1

      - name: Send deployment notification
        if: success()
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK }} \
            -H 'Content-Type: application/json' \
            -d '{
              "text": "✅ Deployment successful to production",
              "attachments": [{
                "color": "good",
                "fields": [
                  {"title": "Environment", "value": "Production", "short": true},
                  {"title": "Branch", "value": "${{ github.ref_name }}", "short": true},
                  {"title": "Commit", "value": "${{ github.sha }}", "short": false},
                  {"title": "Author", "value": "${{ github.actor }}", "short": true},
                  {"title": "URL", "value": "https://xn--220bu63c.com", "short": true}
                ]
              }]
            }' || true

      - name: Send failure notification
        if: failure()
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK }} \
            -H 'Content-Type: application/json' \
            -d '{
              "text": "❌ Deployment failed",
              "attachments": [{
                "color": "danger",
                "fields": [
                  {"title": "Environment", "value": "Production", "short": true},
                  {"title": "Branch", "value": "${{ github.ref_name }}", "short": true},
                  {"title": "Commit", "value": "${{ github.sha }}", "short": false},
                  {"title": "Author", "value": "${{ github.actor }}", "short": true}
                ]
              }]
            }' || true